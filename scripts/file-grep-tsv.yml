parameters:
  script: サンプルスクリプト
  search_dir: /search/to/path

commands:
  - type: file_list
    comment: ファイル一覧を取得
    parameters:
      each: file # 1ファイルずつ
      search_dir: ${search_dir}
      recursive: yes
      filter:
        white_list:
          - "*.py"
        black_list:
          - "*.pyc"
      output_keys:
        full_path: yes
        file_namec: yes
        ext_name: yes
        size: yes
        create_datetime: yes
        update_datetime: yes
        md5: yes

  - type: read_file
    comment: ファイルを読み込む
    parameters:
      path: ${row.full_path}
      each: file # １行毎 fileだとファイル丸ごと,lineだと１行ずつ出力
      skip_empty: yes # 空行スキップ
      target.key: lines # 格納先のキー名
      charset: utf-8

  - type: cut_comment
    comment: ソースファイル上のコメントをカットし１行ずつ出力
    parameters:
      content.key: lines
      ext.key: ext_name
      split_line: yes
      original.key: original_line
      target.key: comment_cut

  - type: regexp
    comment: 正規表現でのマッチング
    parameters:
      target.key: line
      rules:
        - name: ruleName1
          comment: ルール1
          ignore_case: no
          regexp: |
            #def xxx
            #def yyy
            (xxx)(yyy)
          group_names:
            # グループ番号順に格納するキー名を指定
            - key1
            - key2
        - name: ruleName2
          comment: ルール2
          ignore_case: no
          regexp: |
            #def xxx
            #def zzz
            (xxx)(zzz)
          group_names:
            # グループ番号指定の場合
            1: key1
            2: key3
        - name: ruleName3
          comment: ルール3
          ignore_case: no
          regexp: |
            #def xxx
            #def zzz
            (?P<key1>xxx)(?P<key2>zzz)
          # group_names: グループ指定は、groupdictから取得する(https://note.nkmk.me/python-re-match-object-span-group/)

  - type: script
    comment: グルーピング処理
    parameters:
      script: |
        new_rows = []
        for row in context.get_rows():
          new_rows.add(row)
        context.setRows(new_rows)

  - type: write_xsv
    comment: XSVファイル書き込み
    parameters:
      path: ${row.path}
      mode: create_new
      type: tsv
      header: yes
      keys:
        - path
        - line_no
        - col_pos
        - rule_name
        - key1
        - key2
        - key3

  - type: write_table
    comment: テーブル書き込み
    parameters:
      create: yes # 実行時に毎回作成する
      data_source: sample # データソースは、コマンド内で指定する(基本はオートコミット)
      table_name: output1
      columns: # カラムの指定( serial/int/text/datetimeの4種類だけ)
        id: serial
        path: text
        line_no: int
        col_pos: int
        rule_name: text
        key1: text
        key2: text
        key3: text
        create_date: datetime
