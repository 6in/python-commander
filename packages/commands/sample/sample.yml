name: Sample
comment: |
  サンプルデータを返却するコマンドです。
  データベースからデータを取得できない状態などに、想定するデータを定義します。

parameters:
  data_type:
    type: enum
    comment: |
      サンプルデータの記述タイプを指定します
      * csv: テキストで簡易的なCSV形式で記述します
      * json: テキストでJson形式でデータを記述します
      * yaml: テキストでYaml形式をデータを記述します
      * object: Yamlデータ構造でデータを記述します
    values:
      - csv
      - yaml
      - json
      - object
    require: yes
    default: json
  data:
    type:
      - string
      - list
    comment: サンプルデータ
    require: yes
    default: |
      [
        {"p1": "abc", "p2": 123, "p3": true},
        {"p1": "def", "p2": 456, "p3": false},
        {"p1": "ghi", "p2": 789, "p3": true},
      ]

sample:
  - type: sample
    comment: サンプルデータを返却(CSV)
    debug: no
    parameters:
      data_type: json
      data: |
        p1,p2,p3,type
        abc,123,true,json
        def,456,false,yaml
        ghi,789,true,csv

  - type: sample
    comment: サンプルデータを返却(JSON)
    debug: no
    parameters:
      data_type: json
      data: |
        [
          {"p1": "abc", "p2": 123, "p3": true, "type": "json"},
          {"p1": "def", "p2": 456, "p3": false, "type": "json"},
          {"p1": "ghi", "p2": 789, "p3": true, "type": "json"},
          {"p1": "abc", "p2": 123, "p3": true, "type": "json"}
        ]

  - type: sample
    comment: サンプルデータを返却(YAML)
    debug: no
    parameters:
      data_type: yaml
      data: |
        - p1: abc
          p2: 123
          p3: true
        - p1: def
          p2: 456
          p3: false
        - p1: ghi
          p2: 789
          p3: true

  - type: sample
    comment: サンプルデータを返却(Object)
    debug: no
    parameters:
      data_type: object
      data:
        - p1: abc
          p2: 123
          p3: true
        - p1: def
          p2: 456
          p3: false
        - p1: ghi
          p2: 789
          p3: true
